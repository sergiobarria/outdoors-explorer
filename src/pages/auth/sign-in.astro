---
import { isInputError } from 'astro:actions';
import { actions } from 'astro:actions';
import { MountainIcon } from 'lucide-react';

import AuthLayout from '@/layouts/auth-layout.astro';

if (Astro.locals.user) {
	// If user is already signed in, redirect to dashboard
	return Astro.redirect('/dashboard');
}

const refererUrl = new URL(Astro.request.headers.get('referer') as string);
const redirectUrl = refererUrl.searchParams.get('redirect_url');
const message = refererUrl.searchParams.get('message');
const result = Astro.getActionResult(actions.signIn);
if (result && !result.error) {
	if (redirectUrl) return Astro.redirect(redirectUrl);
	else return Astro.redirect('/dashboard');
}

const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<AuthLayout>
	<div class="w-full max-w-lg">
		<div class="mb-4 text-center">
			<MountainIcon className="mx-auto mb-4 size-12 text-primary" />
			<h2 class="text-gradient text-3xl font-bold">Sign In To Your Account</h2>
			<p class="mt-2 text-gray-600">
				Sign in and start exploring the world with Outdoors Explorers
			</p>
		</div>

		{
			message && (
				<p class="my-3 rounded-lg bg-info/50 p-3 text-sm text-white">
					{decodeURIComponent(message)}
				</p>
			)
		}
		{
			result?.error && (
				<p class="my-3 rounded-lg bg-error px-3 py-2 text-sm text-white">
					{result.error.message}
				</p>
			)
		}
		<form id="sign-up-form" method="POST" action={actions.signIn} class="space-y-4">
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">What is your email?</span>
				</div>
				<input
					type="text"
					name="email"
					placeholder="Type here"
					class="input input-md input-bordered w-full"
				/>
				{
					inputErrors.email && (
						<small class="italic text-error">{inputErrors.email?.join(',')}</small>
					)
				}
			</label>

			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Please add your password</span>
				</div>
				<input
					type="password"
					name="password"
					placeholder="********"
					class="input input-md input-bordered w-full"
				/>
				{
					inputErrors.password && (
						<small class="italic text-error">{inputErrors.password?.join(',')}</small>
					)
				}
			</label>

			<button class="btn w-full bg-gradient-to-r from-primary to-secondary text-white">
				Sign In
			</button>
		</form>

		<p class="mt-6 text-center text-gray-600">
			Don't have an account yet?{' '}
			<a href="/auth/sign-up" class="text-primary hover:underline">Sign Up</a>
		</p>
		<p class="mt-4 text-center text-gray-600">
			Return to{' '}
			<a href="/" class="text-primary hover:underline">Home</a>
		</p>
	</div>
</AuthLayout>
